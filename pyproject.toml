[build-system]
requires = ["setuptools>=74", "wheel>=0.44"]
build-backend = "setuptools.build_meta"

[project]
name="archivematica-storage-service"
description="Django based webapp for managing storage in an Archivematica installation"
authors = [
  {name = "Artefactual Systems Inc.", email = "info@artefactual.com"},
]
maintainers = [
  {name = "Artefactual Systems Inc.", email = "info@artefactual.com"},
]
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
dynamic = [
  "version",
]

[project.urls]
homepage = "https://github.com/artefacutal/archivematica-storage-service"
documentation = "https://www.archivematica.org/en/docs/storage-service-latest/"
repository = "https://github.com/artefacutal/archivematica-storage-service"
issues = "https://github.com/archivematica/Issues/issues"

[tool.setuptools.packages.find]
where = ["."]
include=["storage_service*"]

[tool.setuptools.dynamic]
version = {attr = "storage_service.storage_service.__version__"}

[tool.pytest.ini_options]
addopts = "--reuse-db -p no:cacheprovider"
DJANGO_SETTINGS_MODULE = "storage_service.settings.test"
norecursedirs = ".tox"

[tool.coverage.run]
omit = [
    "**/migrations/*",
    "**/settings/*",
    "**/wsgi.py",
    "**/tests/*",
    "**/wsgi.py",
    "**/manage.py",
]
source = [
  "storage_service",
]
branch = true

[tool.ruff.lint]
# Rule reference: https://docs.astral.sh/ruff/rules/
select = [
  "B",
  "C4",
  "E",
  "F",
  "I",
  "PTH",
  "UP",
  "W",
]
ignore = [
  "B904",
  "E501",
  "UP031",
]

[tool.ruff.lint.per-file-ignores]
"{storage_service,tests}/locations/*" = ["PTH"]
"storage_service/storage_service/settings/*" = [
  "F403",
  "F405",
]
"storage_service/storage_service/settings/base.py" = ["E402"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = [
    "administration.*",
    "common.*",
    "locations.*",
    "storage_service.*",
    "tests.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "tests.integration.test_integration",
]
ignore_errors = false

[tool.tox]
legacy_tox_ini = """
    [tox]
    skipsdist = True
    envlist = linting, py{38,39,310,311,312}, migrations
    skip_missing_interpreters = true

    [gh-actions]
    python =
        3.8: py38
        3.9: py39, migrations
        3.10: py310
        3.11: py311
        3.12: py312

    [testenv:linting]
    basepython = python3
    deps = pre-commit
    commands = pre-commit run --all-files --show-diff-on-failure

    [testenv]
    skip_install = true
    deps = -r {toxinidir}/requirements-dev.txt
    commands =
        py.test {posargs}
    setenv =
        PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:}
        PYTHONPATH = ./storage_service
        DJANGO_SETTINGS_MODULE = storage_service.settings.test
        DJANGO_SECRET_KEY = 1234
        BOTO_CONFIG = /dev/null

    [testenv:migrations]
    basepython = python3
    deps = -r {toxinidir}/requirements-dev.txt
    commands = django-admin makemigrations --check --dry-run
"""
