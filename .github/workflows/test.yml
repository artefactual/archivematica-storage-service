---
name: "Test"
on:
  pull_request:
  push:
    branches:
      - "qa/**"
      - "stable/**"
jobs:
  test:
    name: "Test ${{ matrix.name }}"
    runs-on: "ubuntu-18.04"
    strategy:
      matrix:
        include:
          - name: "py27"
            python-version: "2.7"
            toxenv: "py27"
          - name: "py27-checkformigrations"
            python-version: "2.7"
            toxenv: "checkformigrations"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install OS packages"
        run: |
          sudo apt-get --quiet update
          sudo apt-get install --quiet --yes build-essential \
            libmysqlclient-dev libsasl2-dev libldap2-dev libssl-dev \
            p7zip-full unar
      - name: "Create directories needed by test_duracloud.py"
        run: |
          sudo mkdir -p /var/archivematica/storage_service
          sudo chown -R $USER /var/archivematica/storage_service
      - name: "Get pip cache dir"
        id: "pip-cache"
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: "Cache pip packages"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.pip-cache.outputs.dir }}"
          key: "${{ runner.os }}-pip-${{ hashFiles('**/requirements/test.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: "Install tox"
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: "Run tox"
        env:
          TOXENV: ${{ matrix.toxenv }}
        run: |
          tox
  integration:
    name: "Integration"
    runs-on: "ubuntu-18.04"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v2"
      - name: "Run tests"
        run: |
          docker-compose run --rm archivematica-storage-service
          docker-compose down --volumes
        shell: "bash"
        working-directory: "integration"
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
  linting:
    name: "Lint"
    runs-on: "ubuntu-18.04"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v2"
      - name: "Set up Python 3.6"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.6"
      - name: "Install tox"
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: "Run tox"
        run: |
          tox -e linting
